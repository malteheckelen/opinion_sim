.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
sim
demoSim
sim
hk_parameters <- list(
.globals = list(),
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 0.3,
no_agents = 100
),
lattice = list(
directed=FALSE,
),
hegselmann_krause = list(
epsilon = 0.2
)
)
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "./../data/inputs",
outputPath = "./../data/outputs")
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
hk_parameters <- list(
.globals = list(),
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 0.3,
no_agents = 100
),
lattice = list(
directed=FALSE
),
hegselmann_krause = list(
epsilon = 0.2
)
)
paths <- getPaths()
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
sim
class(sim)
str(sim)
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
sim
demoSim$.mods
class(sim)
str(sim)
modules
simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
### Experiments
setwd('/home/malte/projects/opinion_sim/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
library(parallel)
library(raster)
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "./../data/inputs",
outputPath = "./../data/outputs")
#### run a Hegselmann-Kraus model
## load previously defined modules
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
# set parameters for initial setup of model
hk_parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 0.3,
no_agents = 100
),
lattice = list(
directed=FALSE
),
hegselmann_krause = list(
epsilon = 0.2
)
)
paths <- getPaths()
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
sim
str(sim)
setwd('/home/malte/projects/opinion_sim/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "./../data/inputs",
outputPath = "./../data/outputs")
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
hk_parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 0.3,
no_agents = 100
),
lattice = list(
directed=FALSE
),
hegselmann_krause = list(
epsilon = 0.2
)
)
paths <- getPaths()
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
sim
out <- spades(sim)
demoSim <- suppressMessages(simInit(
times = list(start = 0, end = 100),
modules = "SpaDES_sampleModules",
params = list(
.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
demoSim
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
library(parallel)
library(raster)
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "./../data/inputs",
outputPath = "./../data/outputs")
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
hk_parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 0.3,
no_agents = 100
),
lattice = list(
directed=FALSE
),
hegselmann_krause = list(
epsilon = 0.2
)
)
paths <- getPaths()
sim <- simInit(times = times, params = hk_parameters, modules = modules, paths = paths)
out <- spades(sim)
setwd('/home/malte/GitHub/R_MaDisBe/simulation')
#setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '/home/malte/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
modules <- list("basic_setup", "small_world", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50,
no.cores = 1
),
small_world = list(
dim = 1,
nbh_size = 8,
rewire_p = 0.6,
opinion_homophily = 0.3
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules, paths = paths)
setwd('/home/malte/projects/opinion_sim/simulation')
#setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
modules <- list("basic_setup", "small_world", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50,
no.cores = 1
),
small_world = list(
dim = 1,
nbh_size = 8,
rewire_p = 0.6,
opinion_homophily = 0.3
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules, paths = paths)
sim
set.seed(1234)
out <- spades(sim)
sim <- simInit(times = times, params = parameters, modules = modules, paths = paths)
sim
sim <- simInit(times = times, params = parameters, modules = modules, paths = paths)
demoSim <- suppressMessages(simInit(
times = list(start = 0, end = 100),
modules = "SpaDES_sampleModules",
params = list(
.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
demoSim
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, paths = paths)
sim
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, paths = paths)
sim
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, paths = paths)
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, paths = paths)
sim
simInit()
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = paths)
sim
demoSim <- suppressMessages(simInit(
times = list(start = 0, end = 100),
modules = "SpaDES_sampleModules",
params = list(
.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
spades(demoSim)
modules <- list("basic_setup", "small_world", "hegselmann_krause", "data_collection" )
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50,
no.cores = 1
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
paths
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = paths)
sim
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = yo)
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = modules)
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = list(modulePath = './modules'))
sim
hk_parameters
modules <- list("basic_setup", "lattice", "hegselmann_krause", "data_collection" )
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50,
no.cores = 1
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = paths)
paths
class(paths)
sim <- simInitAndSpades(times = times, params = parameters, modules = modules)
sim
sim <- simInit(times = times, params = parameters, modules = modules)
spades(simInit(times = times, params = parameters, modules = modules))
modules <- list("basic_setup", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100, timeunit='day')
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50,
no.cores = 1
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInitAndSpades(times = times, params = parameters, modules = modules, path = paths)
sim <- simInit(times = times, params = parameters, modules = modules, path = paths)
times
params
parameters
modules
sim <- simInit(times = times, params = parameters, modules = modules)
sim
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./data",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
runif()
runif(1)
runif(1)
sim <- simInit(times = times, params = parameters, modules = modules)
sim
parameters
parameters <- list(
basic_setup = list(
mu_opinion_distribution = 0,
sigma_opinion_distribution = 1.65,
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
sim
demoSim <- suppressMessages(simInit(
times = list(start = 0, end = 100),
modules = "SpaDES_sampleModules",
params = list(
.globals = list(burnStats = "nPixelsBurned"),
randomLandscapes = list(
nx = 1e2, ny = 1e2, .saveObjects = "landscape",
.plotInitialTime = NA, .plotInterval = NA, inRAM = TRUE
),
caribouMovement = list(
N = 1e2, .saveObjects = c("caribou"),
.plotInitialTime = 1, .plotInterval = 1, moveInterval = 1
),
fireSpread = list(
nFires = 1e1, spreadprob = 0.235, persistprob = 0, its = 1e6,
returnInterval = 10, startTime = 0,
.plotInitialTime = 0, .plotInterval = 10
)
),
path = list(modulePath = system.file("sampleModules", package = "SpaDES.core"))
))
parameters <- list(
basic_setup = list(
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
sim
sim <- simInit(times = times, params = parameters, modules = modules)
sim
setwd('/home/malte/projects/opinion_sim/simulation')
#setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
modules <- list("basic_setup", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100, timeunit='day')
parameters <- list(
basic_setup = list(
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
sim
setwd('/home/malte/projects/opinion_sim/simulation')
#setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
modules <- list("basic_setup", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100, timeunit='day')
parameters <- list(
basic_setup = list(
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
sim
setwd('/home/malte/projects/opinion_sim/simulation')
#setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '/home/malte/projects/opinion_sim/simulation' # SET YOUR MAIN DIRECTORY HERE.
#mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "./modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
modules <- list("basic_setup", "hegselmann_krause", "data_collection" )
times <- list(start = 0, end = 100, timeunit='day')
parameters <- list(
basic_setup = list(
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
paths <- getPaths()
sim <- simInit(times = times, params = parameters, modules = modules)
traceback()
sim <- simInit(times = times, params = parameters, modules = modules)
sim
parameters <- list(
.globals = list(adjacency_matrix = "adjacency_matrix", no_agents = 100), # globals set global variables
basic_setup = list(
no_agents = 50
),
hegselmann_krause = list(
epsilon = 0.3
)
)
sim <- simInit(times = times, params = parameters, modules = modules)
sim
sim <- simInit(times = times, params = parameters, modules = modules)
sim
