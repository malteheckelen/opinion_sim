outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.2
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.3,
self_incons_tolerance = 0.3,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.2
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.3,
self_incons_tolerance = 0.3,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.2
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.3,
self_incons_tolerance = 0.3,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 20
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.6,
self_incons_tolerance = 0.6,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 20
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.4,
self_incons_tolerance = 0.4,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.6,
self_incons_tolerance = 0.6,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.8,
self_incons_tolerance = 0.3,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.3,
self_incons_tolerance = 0.8,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
#})
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.5,
self_incons_tolerance = 0.5,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 100)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.3,
self_incons_tolerance = 0.3,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
### Interface
setwd('~/GitHub/R_MaDisBe/simulation')
library(SpaDES)  ## should automatically download all packages in the SpaDES family and their dependencies
## decide where you're working
mainDir <- '~/GitHub/R_MaDisBe/simulation' # SET YOUR MAIN DIRECTORY HERE.
setPaths(cachePath = "cache",
modulePath = "modules",
inputPath = "../data/inputs",
outputPath = "../data/outputs")
# FUNCTION FOR PARAMETER SELECTION THAT INCLUDES simInit()
# FUNCTION FOR SETTING EXPERIMENT RUN PARAMETERS
# FUNCTION FOR EXECUTION
# - options=save output, plot etc
###### GLOBAL STRUCTURES
# agents = list of lists
# adjacency_matrix = what the name says
# opinions = tibble with id and opinion columns
# construct_environment()
# interact()
modules <- list("basic_setup", "small_world", "rc_model", "data_collection")
times <- list(start = 0, end = 500)
parameters <- list(
basic_setup = list(
opinion_distribution = "uniform",
no_agents = 80
),
small_world = list(
dim = 1,
rewire_p = 0.6
),
rc_model = list(
epsilon = 0.15,
other_incons_tolerance = 0.6,
self_incons_tolerance = 0.6,
opinion_memory_depth = 10,
message_memory_depth = 10
)
)
paths <- getPaths()
SIM <- simInit(times = times, params = parameters, modules = modules, paths = paths)
set.seed(1234)
#profvis({
out <- spades(SIM)
#})
out$data_collect %>%
as_tibble() %>%
ggplot(aes(time, opinions)) +
geom_point(size= 0.02, alpha=0.2, colour="dodgerblue3") +
theme_bw()
